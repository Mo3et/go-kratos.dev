"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9493],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,d=u["".concat(s,".").concat(m)]||u[m]||g[m]||i;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1148:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return g},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var n=r(3117),o=(r(7294),r(3905));const i={id:"registry",title:"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0",description:"Kratos Registry \u63a5\u53e3\u5206\u4e3a\u4e24\u4e2a\uff0cRegistrar \u4e3a\u5b9e\u4f8b\u6ce8\u518c\u548c\u53cd\u6ce8\u518c\uff0cDiscovery \u4e3a\u670d\u52a1\u5b9e\u4f8b\u5217\u8868\u83b7\u53d6",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},a=void 0,c={unversionedId:"component/registry",id:"component/registry",title:"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0",description:"Kratos Registry \u63a5\u53e3\u5206\u4e3a\u4e24\u4e2a\uff0cRegistrar \u4e3a\u5b9e\u4f8b\u6ce8\u518c\u548c\u53cd\u6ce8\u518c\uff0cDiscovery \u4e3a\u670d\u52a1\u5b9e\u4f8b\u5217\u8868\u83b7\u53d6",source:"@site/docs/component/08-registry.md",sourceDirName:"component",slug:"/component/registry",permalink:"/docs/component/registry",draft:!1,editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/docs/component/08-registry.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"registry",title:"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0",description:"Kratos Registry \u63a5\u53e3\u5206\u4e3a\u4e24\u4e2a\uff0cRegistrar \u4e3a\u5b9e\u4f8b\u6ce8\u518c\u548c\u53cd\u6ce8\u518c\uff0cDiscovery \u4e3a\u670d\u52a1\u5b9e\u4f8b\u5217\u8868\u83b7\u53d6",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"\u76d1\u63a7\u63a5\u53e3",permalink:"/docs/component/metrics"},next:{title:"\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861",permalink:"/docs/component/selector"}},s={},l=[{value:"\u63a5\u53e3\u5b9e\u73b0",id:"\u63a5\u53e3\u5b9e\u73b0",level:3},{value:"\u4f7f\u7528\u65b9\u5f0f",id:"\u4f7f\u7528\u65b9\u5f0f",level:3},{value:"\u6ce8\u518c\u670d\u52a1\u5b9e\u4f8b",id:"\u6ce8\u518c\u670d\u52a1\u5b9e\u4f8b",level:4},{value:"\u670d\u52a1\u53d1\u73b0\uff08gRPC\uff09",id:"\u670d\u52a1\u53d1\u73b0grpc",level:4}],p={toc:l};function g(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"\u63a5\u53e3\u5b9e\u73b0"},"\u63a5\u53e3\u5b9e\u73b0"),(0,o.kt)("p",null,"Registry \u63a5\u53e3\u5206\u4e3a\u4e24\u4e2a\uff0cRegistrar \u4e3a\u5b9e\u4f8b\u6ce8\u518c\u548c\u53cd\u6ce8\u518c\uff0cDiscovery \u4e3a\u670d\u52a1\u5b9e\u4f8b\u5217\u8868\u83b7\u53d6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Registrar interface {\n    // \u6ce8\u518c\u5b9e\u4f8b\n    Register(ctx context.Context, service *ServiceInstance) error\n    // \u53cd\u6ce8\u518c\u5b9e\u4f8b\n    Deregister(ctx context.Context, service *ServiceInstance) error\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Discovery interface {\n    // \u6839\u636e serviceName \u76f4\u63a5\u62c9\u53d6\u5b9e\u4f8b\u5217\u8868\n    GetService(ctx context.Context, serviceName string) ([]*ServiceInstance, error)\n    // \u6839\u636e serviceName \u963b\u585e\u5f0f\u8ba2\u9605\u4e00\u4e2a\u670d\u52a1\u7684\u5b9e\u4f8b\u5217\u8868\u4fe1\u606f\n    Watch(ctx context.Context, serviceName string) (Watcher, error)\n}\n")),(0,o.kt)("p",null,"\u5df2\u652f\u6301\u7684\u5b9e\u73b0\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/consul"},"consul")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/discovery"},"discovery")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/etcd"},"etcd")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/kubernetes"},"kubernetes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/nacos"},"nacos")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/polaris"},"polaris")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/contrib/registry/zookeeper"},"zookeeper"))),(0,o.kt)("h3",{id:"\u4f7f\u7528\u65b9\u5f0f"},"\u4f7f\u7528\u65b9\u5f0f"),(0,o.kt)("h4",{id:"\u6ce8\u518c\u670d\u52a1\u5b9e\u4f8b"},"\u6ce8\u518c\u670d\u52a1\u5b9e\u4f8b"),(0,o.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a Registrar\uff08\u4ee5 consul \u4e3a\u4f8b\uff09\uff0c\u5c06 Registrar \u6ce8\u5165\u8fdb Kratos \u5e94\u7528\u5b9e\u4f8b\u4e2d\uff0cKratos \u4f1a\u81ea\u52a8\u5b8c\u6210\u5b9e\u4f8b\u6ce8\u518c\u548c\u53cd\u6ce8\u518c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    consul "github.com/go-kratos/kratos/contrib/registry/consul/v2"\n    "github.com/hashicorp/consul/api"\n)\n\n// new consul client\nclient, err := api.NewClient(api.DefaultConfig())\nif err != nil {\n    panic(err)\n}\n// new reg with consul client\nreg := consul.New(client)\n\napp := kratos.New(\n    // service-name\n    kratos.Name(Name),\n    kratos.Version(Version),\n    kratos.Metadata(map[string]string{}),\n    kratos.Logger(logger),\n    kratos.Server(\n        hs,\n        gs,\n    ),\n    // with registrar\n    kratos.Registrar(reg),\n)\n')),(0,o.kt)("p",null,"\u5982\u679c\u4f7f\u7528 etcd \u6216\u662f\u5176\u5b83\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u5b9e\u73b0\u6765\u521b\u5efa Registry \u540e\u4f20\u5165"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/go-kratos/kratos/contrib/registry/etcd/v2"\n    clientv3 "go.etcd.io/etcd/client/v3"\n)\n\n// new etcd client\nclient, err := clientv3.New(clientv3.Config{\n    Endpoints: []string{"127.0.0.1:2379"},\n})\nif err != nil {\n    panic(err)\n}\n// new reg with etcd client\nreg := etcd.New(client)\n\napp := kratos.New(\n    // service-name\n    kratos.Name(Name),\n    kratos.Version(Version),\n    kratos.Metadata(map[string]string{}),\n    kratos.Logger(logger),\n    kratos.Server(\n        hs,\n        gs,\n    ),\n    // with registrar\n    kratos.Registrar(reg),\n)\n')),(0,o.kt)("h4",{id:"\u670d\u52a1\u53d1\u73b0grpc"},"\u670d\u52a1\u53d1\u73b0\uff08gRPC\uff09"),(0,o.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a Discoverer\uff08\u4ee5 consul \u4e3a\u4f8b\uff09\uff0c\u6839\u636e Dial url \u683c\u5f0f ",(0,o.kt)("inlineCode",{parentName:"p"},"<schema>://[authority]/<service-name>")," \u521b\u5efa\u4e00\u4e2a Endpoint\uff0c\u901a\u8fc7 grpc.WithDiscoverer\uff0cgrpc.WithEndpoint \u521b\u5efa\u4e00\u4e2a grpc connection"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n\n    consul "github.com/go-kratos/kratos/contrib/registry/consul/v2"\n    "github.com/go-kratos/kratos/v2/transport/grpc"\n    "github.com/hashicorp/consul/api"\n)\n\n// new consul client\nclient, err := api.NewClient(api.DefaultConfig())\nif err != nil {\n    panic(err)\n}\n// new dis with consul client\ndis := consul.New(client)\n\nendpoint := "discovery:///provider"\nconn, err := grpc.Dial(context.Background(), grpc.WithEndpoint(endpoint), grpc.WithDiscovery(dis))\nif err != nil {\n    panic(err)\n}\n')),(0,o.kt)("p",null,"\u4e0e\u670d\u52a1\u6ce8\u518c\u76f8\u540c\uff0c\u5982\u679c\u4f7f\u7528 etcd \u6216\u662f\u5176\u5b83\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u5b9e\u73b0\u6765\u521b\u5efa Discovery \u540e\u4f20\u5165"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/go-kratos/kratos/contrib/registry/etcd/v2"\n    clientv3 "go.etcd.io/etcd/client/v3"\n)\n\n// new etcd client\nclient, err := clientv3.New(clientv3.Config{\n    Endpoints: []string{"127.0.0.1:2379"},\n})\nif err != nil {\n    panic(err)\n}\n// new dis with etcd client\ndis := etcd.New(client)\n\nendpoint := "discovery:///provider"\nconn, err := grpc.Dial(context.Background(), grpc.WithEndpoint(endpoint), grpc.WithDiscovery(dis))\nif err != nil {\n    panic(err)\n}\n')))}g.isMDXComponent=!0}}]);
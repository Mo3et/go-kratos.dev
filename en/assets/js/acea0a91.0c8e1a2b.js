"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4647],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),d=o,h=c["".concat(l,".").concat(d)]||c[d]||g[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3516:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return s}});var r=n(3117),o=(n(7294),n(3905));const a={id:"openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},i=void 0,p={unversionedId:"guide/openapi",id:"guide/openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guide/02-openapi.md",sourceDirName:"guide",slug:"/guide/openapi",permalink:"/en/docs/guide/openapi",draft:!1,editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/guide/02-openapi.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"Protobuf Guideline",permalink:"/en/docs/guide/api-protobuf"},next:{title:"Dependency Injection",permalink:"/en/docs/guide/wire"}},l={},s=[{value:"Method 1: Use plug-ins to provide the swagger API",id:"method-1-use-plug-ins-to-provide-the-swagger-api",level:3},{value:"Installation",id:"installation",level:4},{value:"Usage",id:"usage",level:4},{value:"Method 2: Use protoc to generate swagger.json",id:"method-2-use-protoc-to-generate-swaggerjson",level:3},{value:"Installation",id:"installation-1",level:4},{value:"Generation",id:"generation",level:4},{value:"Usage",id:"usage-1",level:4}],u={toc:s};function g(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The framework provides open API/Swagger use in two ways: 1. Provide swagger interface on service, 2. Use the protoc plug-in to generate the swagger.json file. Here are two ways to do this."),(0,o.kt)("h3",{id:"method-1-use-plug-ins-to-provide-the-swagger-api"},"Method 1: Use plug-ins to provide the swagger API"),(0,o.kt)("p",null,"Plugin ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/go-kratos/swagger-api"},"swagger-api")," provides a range of swagger-related APIs, as well as the corresponding UI interface."),(0,o.kt)("h4",{id:"installation"},"Installation"),(0,o.kt)("p",null,"First, install the ",(0,o.kt)("inlineCode",{parentName:"p"},"swagger-api")," plugin on your project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go get -u github.com/go-kratos/swagger-api\n")),(0,o.kt)("p",null,"Then initialize and register in newHTTPServer of ",(0,o.kt)("inlineCode",{parentName:"p"},"internal/server/http.go"),", and try to put this route registration first to avoid match failed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/swagger-api/openapiv2"\n\nopenAPIhandler := openapiv2.NewHandler()\nsrv.HandlePrefix("/q/", openAPIhandler)\n')),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"/q/swagger-ui/")," in Web Browser in order to access Swagger UI"),(0,o.kt)("h3",{id:"method-2-use-protoc-to-generate-swaggerjson"},"Method 2: Use protoc to generate swagger.json"),(0,o.kt)("p",null,"The new project Makefile has been integrated by default with the commands associated with generating swagger.json, and here's how to use them"),(0,o.kt)("h4",{id:"installation-1"},"Installation"),(0,o.kt)("p",null,"First, install the protoc plug-in globally."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2\n")),(0,o.kt)("h4",{id:"generation"},"Generation"),(0,o.kt)("p",null,"Use the protoc command directly at the root of the project, note that modifying the final proto file path of the command is the actual path"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"protoc --proto_path=. \\\n        --proto_path=./third_party \\\n        --openapiv2_out . \\\n        --openapiv2_opt logtostderr=true \\\n        --openapiv2_opt json_names_for_fields=false \\\n        api/helloworld/v1/greeter.proto\n")),(0,o.kt)("h4",{id:"usage-1"},"Usage"),(0,o.kt)("p",null,"Once the above command has been executed successfully, the corresponding swagger.json file will be generated in the directory where your proto file is located.\nYou can import it into any platform that supports the Open API specification for browsing, such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/swagger-api/swagger-ui"},"Swagger UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://editor.swagger.io/"},"Swagger Editor")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Redocly/redoc"},"ReDoc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/YMFE/yapi"},"YApi")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.postman.com/"},"Postman"))))}g.isMDXComponent=!0}}]);
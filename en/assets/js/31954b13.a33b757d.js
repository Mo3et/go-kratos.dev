"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2844],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6204:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var n=r(3117),o=(r(7294),r(3905));const a={id:"overview",title:"Overview"},i=void 0,l={unversionedId:"component/middleware/overview",id:"component/middleware/overview",title:"Overview",description:"Kratos has a series of built-in middleware to deal with common purpose such as logging or metrics. You could also implement Middleware interface to develop your custom middleware to process common business such as the user authentication etc.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/01-overview.md",sourceDirName:"component/middleware",slug:"/component/middleware/overview",permalink:"/en/docs/component/middleware/overview",draft:!1,editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/01-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"overview",title:"Overview"},sidebar:"docs",previous:{title:"\u4e2d\u95f4\u4ef6",permalink:"/en/docs/category/\u4e2d\u95f4\u4ef6"},next:{title:"Authentication",permalink:"/en/docs/component/middleware/auth"}},s={},p=[{value:"Built-in Middleware",id:"built-in-middleware",level:2},{value:"Effective Sequence",id:"effective-sequence",level:2},{value:"Usage",id:"usage",level:2},{value:"Modify Middleware",id:"modify-middleware",level:2},{value:"Custom Middleware",id:"custom-middleware",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Kratos has a series of built-in middleware to deal with common purpose such as logging or metrics. You could also implement ",(0,o.kt)("strong",{parentName:"p"},"Middleware")," interface to develop your custom middleware to process common business such as the user authentication etc."),(0,o.kt)("h2",{id:"built-in-middleware"},"Built-in Middleware"),(0,o.kt)("p",null,"Their codes are located in ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware")," directory."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"logging"),": This middleware is for logging the request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"metrics"),": This middleware is for enabling metric."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"recovery"),": This middleware is for panic recovery."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tracing"),": This middleware is for enabling trace."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"validate"),": This middleware is for parameter validation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"metadata"),": This middleware is for enabling metadata transmission."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"auth"),": This middleware is for authority check using JWT."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ratelimit"),": This middleware is for traffic control in server side."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"circuitbreaker"),": This middleware is for breaker control in client side.")),(0,o.kt)("h2",{id:"effective-sequence"},"Effective Sequence"),(0,o.kt)("p",null,"The execution sequence of the request is the sequence of Middleware registration, and the execution sequence of the response returned is the reverse of the registration sequence.That is a First In, Last Out (FILO)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502MIDDLEWARE 1       \u2502\n         \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n         \u2502 \u2502MIDDLEWARE 2    \u2502\u2502\n         \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\n         \u2502 \u2502 \u2502MIDDLEWARE 3 \u2502\u2502\u2502\n         \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u2502\nREQUEST  \u2502 \u2502 \u2502 \u2502  YOUR   \u2502 \u2502\u2502\u2502  RESPONSE\n   \u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u253c\u2500\u253c\u2500\u25b7 HANDLER \u25cb\u2500\u253c\u253c\u253c\u2500\u2500\u2500\u25b7\n         \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502\n         \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\n         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Register it with ",(0,o.kt)("inlineCode",{parentName:"p"},"ServerOption")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"NewGRPCServer")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"NewHTTPServer"),"."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// http\n// define opts\nvar opts = []http.ServerOption{\n    http.Middleware(\n        recovery.Recovery(),\n        tracing.Server(),\n        logging.Server(),\n    ),\n}\n// create server\nhttp.NewServer(opts...)\n\n//grpc\nvar opts = []grpc.ServerOption{\n        grpc.Middleware(\n            recovery.Recovery(),\n            status.Server(),\n            tracing.Server(),\n            logging.Server(),\n        ),\n    }\n\n// create server\ngrpc.NewServer(opts...)\n")),(0,o.kt)("h2",{id:"modify-middleware"},"Modify Middleware"),(0,o.kt)("p",null,"Need to implement the ",(0,o.kt)("inlineCode",{parentName:"p"},"Middleware")," interface."),(0,o.kt)("p",null,"In the middleware, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"tr, ok := transport.FromServerContext(ctx)")," to get the ",(0,o.kt)("strong",{parentName:"p"},"Transporter")," instance to access metadata about the interface."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n\n    "github.com/go-kratos/kratos/v2/middleware"\n    "github.com/go-kratos/kratos/v2/transport"\n)\n\nfunc Middleware1() middleware.Middleware {\n    return func(handler middleware.Handler) middleware.Handler {\n        return func(ctx context.Context, req interface{}) (reply interface{}, err error) {\n            if tr, ok := transport.FromServerContext(ctx); ok {\n                // Do something on entering\n                defer func() {\n                // Do something on exiting\n                 }()\n            }\n            return handler(ctx, req)\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"custom-middleware"},"Custom Middleware"),(0,o.kt)("p",null,"Customized middleware for specific routes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"server: ",(0,o.kt)("inlineCode",{parentName:"li"},"selector.Server(ms...)")),(0,o.kt)("li",{parentName:"ul"},"client: ",(0,o.kt)("inlineCode",{parentName:"li"},"selector.Client(ms...)"))),(0,o.kt)("p",null,"Matching rule (multi parameter):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Path(path...)"),": path match"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Regex(regex...)"),": regex match"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Prefix(prefix...)"),": prefix path match"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Match(fn)"),": function match, The function format is ",(0,o.kt)("inlineCode",{parentName:"li"},"func(ctx context.Context,operation string) bool"),". ",(0,o.kt)("inlineCode",{parentName:"li"},"operation")," is path,If the return value is ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),",match successful, ",(0,o.kt)("inlineCode",{parentName:"li"},"ctx")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"transport.FromServerContext(ctx)")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"transport.FromClientContext(ctx")," get ",(0,o.kt)("inlineCode",{parentName:"li"},"Transporter)"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"http server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/kratos/v2/middleware/selector"\n\nhttp.Middleware(\n            selector.Server(recovery.Recovery(), tracing.Server(),testMiddleware).\n                Path("/hello.Update/UpdateUser", "/hello.kratos/SayHello").\n                Regex(`/test.hello/Get[0-9]+`).\n                Prefix("/kratos.", "/go-kratos.", "/helloworld.Greeter/").\n                Build(),\n        )\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"http client")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/kratos/v2/middleware/selector"\n\nhttp.WithMiddleware(\n            selector.Client(recovery.Recovery(), tracing.Server(),testMiddleware).\n                Path("/hello.Update/UpdateUser", "/hello.kratos/SayHello").\n                Regex(`/test.hello/Get[0-9]+`).\n                Prefix("/kratos.", "/go-kratos.", "/helloworld.Greeter/").\n                Match(func(ctx context.Context,operation string) bool {\n                    if strings.HasPrefix(operation, "/go-kratos.dev") || strings.HasSuffix(operation, "world") {\n                        return true\n                    }\n                    tr, ok := transport.FromClientContext(ctx)\n                    if !ok {\n                        return false\n                    }\n                    if tr.RequestHeader().Get("go-kratos") == "kratos" {\n                        return true\n                    }\n                    return false\n                }).Build(),\n        )\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"grpc server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/kratos/v2/middleware/selector"\n\ngrpc.Middleware(\n            selector.Server(recovery.Recovery(), tracing.Server(),testMiddleware).\n                Path("/hello.Update/UpdateUser", "/hello.kratos/SayHello").\n                Regex(`/test.hello/Get[0-9]+`).\n                Prefix("/kratos.", "/go-kratos.", "/helloworld.Greeter/").\n                Build(),\n        )\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"grpc client")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/kratos/v2/middleware/selector"\n\ngrpc.Middleware(\n            selector.Client(recovery.Recovery(), tracing.Server(),testMiddleware).\n                Path("/hello.Update/UpdateUser", "/hello.kratos/SayHello").\n                Regex(`/test.hello/Get[0-9]+`).\n                Prefix("/kratos.", "/go-kratos.", "/helloworld.Greeter/").\n                Build(),\n        )\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note: the customized middleware matches through ",(0,o.kt)("inlineCode",{parentName:"strong"},"operation"),", not is the HTTP routing ! ! ! ")),(0,o.kt)("p",{parentName:"blockquote"},"operation is the unified GRC path of HTTP and GRC.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"operation find")),(0,o.kt)("p",null,"gRPC path's splicing rule is ",(0,o.kt)("inlineCode",{parentName:"p"},"/package.Service/Method"),"."),(0,o.kt)("p",null,"For example, in the following proto file\uff0cif we want to call the sayhello method, then the operation is ",(0,o.kt)("inlineCode",{parentName:"p"},"/helloworld.Greeter/SayHello"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},'syntax = "proto3";\n\npackage helloworld;\n\nimport "google/api/annotations.proto";\n\noption go_package = "github.com/go-kratos/examples/helloworld/helloworld";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply)  {\n        option (google.api.http) = {\n            get: "/helloworld/{name}",\n        };\n  }\n}\n// The request message containing the user\'s name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n')))}d.isMDXComponent=!0}}]);